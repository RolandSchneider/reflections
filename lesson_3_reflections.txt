When would you want to use a remote repository rather than keeping all your work local?
  
  mainly three reasons: 1) For backup. To store my program on a second machine, 
  so I still have acceess to my program code even if my own computer crashes.
  2) To share a program with other developers. 3) To have a central repository that
  can act as a reference.


Why might you want to always pull changes manually rather than having Git automatically 
stay up-to-date with your remote repository?

	Probably beause I want to synchronize only at certain times.
	At start of work, for example.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
	forks: for starting at someone elses repository.
	clones: copying one repository to some other pplace
	brances: development vs production, for example

What is the benefit of having a copy of the last known state of the remote stored locally?

	The other possibility would be to merge automatically. 
	You probably want to check and modify before merging.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

	Collaborating with pull requests is much easier, of course. Everyone sees the features intended 
	for merge and can comment on them.

